name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Build the app
        run: |
          export NODE_OPTIONS=--max-old-space-size=8192
          if [[ $GITHUB_REF == refs/heads/main ]]; then
            npm run build:prod
          else
            npm run build:dev
          fi

      - name: Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: |
          docker build -t intothefathom/splyce-frontend-app:${{ github.sha }} .
          docker tag intothefathom/splyce-frontend-app:${{ github.sha }} intothefathom/splyce-frontend-app:latest

      - name: Push Docker image
        run: |
          docker push intothefathom/splyce-frontend-app:${{ github.sha }}
          docker push intothefathom/splyce-frontend-app:latest

      - name: Set Argo CD secrets
        id: set-secrets
        run: |
          if [[ $GITHUB_REF == refs/heads/main ]]; then
            echo "::set-output name=ARGOCD_API_URL::${{ secrets.ARGOCD_API_URL_PROD }}"
            echo "::set-output name=ARGOCD_AUTH_TOKEN::${{ secrets.ARGOCD_AUTH_TOKEN_PROD }}"
          else
            echo "::set-output name=ARGOCD_API_URL::${{ secrets.ARGOCD_API_URL_DEV }}"
            echo "::set-output name=ARGOCD_AUTH_TOKEN::${{ secrets.ARGOCD_AUTH_TOKEN_DEV }}"
          fi

      - name: Sync Argo CD and wait for completion
        run: |
          docker run --rm \
            -e ARGOCD_AUTH_TOKEN=${{ steps.set-secrets.outputs.ARGOCD_AUTH_TOKEN }} \
            argoproj/argocd:v2.4.3 \
            /bin/sh -c \
            "argocd app set splyce-frontend-app \
            --server ${{ steps.set-secrets.outputs.ARGOCD_API_URL }} \
            --parameter image.tag=${{ github.sha }} && \
            argocd app sync splyce-frontend-app \
            --server ${{ steps.set-secrets.outputs.ARGOCD_API_URL }} \
            --grpc-web \
            --timeout 180"